local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local MarketplaceService = game:GetService("MarketplaceService")

_G.H4xScriptWebhookSent = false
_G.H4xSession = _G.H4xSession or tostring(math.random(1000, 9999))

local H4xValidKeys = {"NoobPratik", "WoWYouDIDIT"}
local ApiKey = "5108e2114475bd8262ed6a4d160e1cfc"

local Scripts = {
    ["18172550962"] = {
        name = "Pixel Blade [Early Access]",
        script_url = "https://raw.githubusercontent.com/H4xScripts/Scripts/refs/heads/main/Pixel%20Blade",
        universe_id = 6161049307,
        keyless = true,
        universal = true
    },
    ["126884695634066"] = {
        name = "[‚õ≤] Grow a Garden üçÖ",
        script_url = "https://raw.githubusercontent.com/H4xScripts/Scripts/refs/heads/main/GrowAGarden.lua",
        universe_id = 7436755782,
        keyless = false,
        universal = false
    },
    ["91867617264223"] = {
        name = "[‚õ≤] Grow a Garden üçÖ",
        script_url = "https://raw.githubusercontent.com/H4xScripts/Scripts/refs/heads/main/lolua.lua",
        universe_id = 7436755782,
        keyless = true,
        universal = false
    },
    ["17589670912"] = {
        name = "Find The Auras [585]",
        script_url = "https://raw.githubusercontent.com/H4xScripts/Scripts/refs/heads/main/FindTheAura.lua",
        universe_id = 6022141304,
        keyless = true,
        universal = false
    },
    ["111989938562194"] = {
        name = "Brainrot Evolution",
        script_url = "https://raw.githubusercontent.com/H4xScripts/Scripts/refs/heads/main/BrainrotEvolution.lua",
        universe_id = 7332711118,
        keyless = true,
        universal = false
    },
    ["81440632616906"] = {
        name = "‚õèÔ∏è Dig to Earth's CORE!",
        script_url = "https://raw.githubusercontent.com/H4xScripts/Scripts/refs/heads/main/DigToEarthCore.lua",
        universe_id = 7468338447,
        keyless = true,
        universal = true
    },
    ["94845773826960"] = {
        name = "NEWüö™Dungeon Heroes ‚öîÔ∏è",
        script_url = "https://raw.githubusercontent.com/H4xScripts/Scripts/refs/heads/main/DungeonHeroes.lua",
        universe_id = 7546582051,
        keyless = true,
        universal = true
    },
    ["14313259147"] = {
        name = "FORTLINE",
        script_url = "https://raw.githubusercontent.com/H4xScripts/Scripts/refs/heads/main/FRONTLINE.h4x" ,
        universal = 99999999,
        keyless = true,
        universal = false
    },
    ["15154513235"] = {
        name = "üí™Kamehameha Simulator",
        script_url = "https://raw.githubusercontent.com/H4xScripts/Scripts/refs/heads/main/Kamehameha%20Simulator.h4x",
        universal = 000,
        keyless = true,
        universal = false,
    },
    ["132821440336521"] = {
        name = "Merge For Diamods",
        script_url = "https://raw.githubusercontent.com/H4xScripts/Scripts/refs/heads/main/Merge%20for%20diamonds.h4x",
        universal = 999,
        keyless = true,
        universal = false,
    }
}

local KEY_WEBHOOKS = {
    "https://discord.com/api/webhooks/1380707219871629342/lgkNP_Wwbe6GODc-ONIaa7IS4tss-8j51u5sp6Jt2x4nyIsWFszF8WgRJtlV2RrT-Wvx",
    "https://discord.com/api/webhooks/1380707223814144080/Itu2YRSg7eUFL6IKHjQMQrrleRe7FEH4_03St5T-KvizcXQT6w0TGKsFehgxes_lbxVC",
    "https://discord.com/api/webhooks/1380708229847453818/tzlIVSgVjzuYsbTrlBnICBHrVC3p1x8TDjm97N0J_XMLjKFcKSrHXQ31RezMDrdZvQU3",
    "https://discord.com/api/webhooks/1380708231172722841/BfjJCXyb97gYWNMOYcjpesoa2YC4LCizYctsqatie5jH5MvPGpV46k1Yv5sxgEsTk24c"
}

local function saveKey(key)
    if not isfolder("H4xScripts") then makefolder("H4xScripts") end
    writefile("H4xScripts/key.txt", key)
end

local function deleteKey()
    if isfile("H4xScripts/key.txt") then 
        delfile("H4xScripts/key.txt") 
    end
end

local function loadKey()
    local key = isfile("H4xScripts/key.txt") and readfile("H4xScripts/key.txt") or ""
    return key
end

local function getExecutorInfo()
    local executor = identifyexecutor and identifyexecutor() or getexecutorname and getexecutorname() or "Unknown"
    local level = getexecutormetrics and tostring(getexecutormetrics().Level) or getidentity and tostring(getidentity()) or (syn and syn.get_thread_identity and tostring(syn.get_thread_identity())) or "N/A"
    return executor, level
end

local function sendKeyWebhook(keyUsed)
    if _G.H4xScriptWebhookSent then 
        return 
    end
    _G.H4xScriptWebhookSent = true

    local player = Players.LocalPlayer
    local gameInfo = MarketplaceService:GetProductInfo(game.PlaceId)

    local executor, execLevel = getExecutorInfo()
    local data = {
        ["content"] = "",
        ["tts"] = false,
        ["embeds"] = {{
            ["title"] = "Key Used - H4xScripts",
            ["description"] = string.format(
                "**Game**: [%s](https://www.roblox.com/games/%d)\n".. 
                "**Key**: `%s`\n".. 
                "**Executor**: `%s`\n".. 
                "**Executor Level**: `%s`\n"..
                "**SessionId**: `%s`",
                gameInfo.Name, game.PlaceId, keyUsed, executor, execLevel, _G.H4xSession
            ),
            ["color"] = 16753920,
            ["footer"] = {["text"] = os.date("%Y-%m-%d %H:%M:%S")}
        }}
    }

    pcall(function()
        local req = (syn and syn.request) or (http_request or request)
        if req then
            local randomWebhook = KEY_WEBHOOKS[math.random(1, #KEY_WEBHOOKS)]
            local startTime = tick()
            req({
                Url = randomWebhook,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = HttpService:JSONEncode(data)
            })
        end
    end, function(err)
    end)
end

local function getGameConfig()
    local universe_id = tostring(game.GameId)
    local place_id = tostring(game.PlaceId)
    
    for placeId, cfg in pairs(Scripts) do
        if cfg.universal and cfg.universe_id and tostring(cfg.universe_id) == universe_id then
            return cfg
        elseif not cfg.universal and tostring(placeId) == place_id then
            return cfg
        end
    end
    return nil
end

local function isGameSupported()
    local universe_id = tostring(game.GameId)
    local place_id = tostring(game.PlaceId)
    
    for placeId, cfg in pairs(Scripts) do
        if cfg.universal and cfg.universe_id and tostring(cfg.universe_id) == universe_id then
            return true
        elseif not cfg.universal and tostring(placeId) == place_id then
            return true
        end
    end
    return false
end

local currentGameConfig = getGameConfig()
local gameInfo = MarketplaceService:GetProductInfo(game.PlaceId)

if currentGameConfig and currentGameConfig.keyless then
    _G.H4xScriptKey = "Loaded"
    coroutine.wrap(function() sendKeyWebhook("Keyless") end)()
    local startTime = tick()
    loadstring(game:HttpGet(currentGameConfig.script_url))()
    return
end

local api = loadstring(game:HttpGet("https://sdkapi-public.luarmor.net/library.lua"))()
api.script_id = ApiKey

local savedKey = loadKey()
if table.find(H4xValidKeys, savedKey) and currentGameConfig then
    saveKey(savedKey)
    _G.H4xScriptKey = "Loaded"
    coroutine.wrap(function() sendKeyWebhook(savedKey) end)()
    local startTime = tick()
    loadstring(game:HttpGet(currentGameConfig.script_url))()
    return
elseif savedKey and #savedKey == 32 and currentGameConfig then
    local startTime = tick()
    local status = api.check_key(savedKey)
    if status and type(status) == "table" and status.code == "KEY_VALID" then
        saveKey(savedKey)
        _G.H4xScriptKey = "Loaded"
        coroutine.wrap(function() sendKeyWebhook(savedKey) end)()
        startTime = tick()
        loadstring(game:HttpGet(currentGameConfig.script_url))()
        return
    else
        deleteKey()
    end
end

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = "H4xScript",
    SubTitle = currentGameConfig and currentGameConfig.name or gameInfo.Name,
    TabWidth = 110,
    Size = UDim2.fromOffset(450, 300),
    Acrylic = false,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.LeftControl
})

_G.H4xScriptUI = Window
local Tabs = {
    Main = Window:AddTab({Title = "Key System", Icon = "key"}),
    Supported = Window:AddTab({Title = "Supported Games", Icon = "heart"})
}
Window:SelectTab(1)

if not isGameSupported() and not _G.H4xScriptWebhookSent then
    Tabs.Main:AddParagraph({
        Title = "H4xScripts",
        Content = "This game ("..gameInfo.Name..") is not in our supported list.\nKey validation may not work properly."
    })
    Tabs.Main:AddParagraph({
        Title = "Warning",
        Content = "This game is not supported."
    })
    coroutine.wrap(function() sendKeyWebhook("UNsupported") end)()
end

Tabs.Main:AddInput("KeyInput", {
    Title = "Enter Key",
    Default = savedKey,
    Placeholder = "Paste 32-character key here",
    Numeric = false,
    Finished = false,
    Callback = function(Value)
        savedKey = Value:gsub("%s+", "")
    end
})

Tabs.Main:AddButton({
    Title = "Check Key",
    Callback = function()
        if table.find(H4xValidKeys, savedKey) then
            saveKey(savedKey)
            _G.H4xScriptKey = "Loaded"
            coroutine.wrap(function() sendKeyWebhook(savedKey) end)()
            Window:Destroy()
            if currentGameConfig then
                local startTime = tick()
                loadstring(game:HttpGet(currentGameConfig.script_url))()
            else
                Fluent:Notify({Title = "No Script Available", Content = "This game is not supported.", Duration = 6})
            end
        elseif #savedKey ~= 32 then
            Fluent:Notify({Title = "Invalid Key", Content = "Key must be exactly 32 characters", Duration = 5})
            return
        else
            local startTime = tick()
            local status = api.check_key(savedKey)
            if not status or type(status) ~= "table" then
                deleteKey()
                Fluent:Notify({Title = "API Error", Content = "Failed to validate key", Duration = 8})
                return
            end
            if status.code == "KEY_VALID" then
                saveKey(savedKey)
                _G.H4xScriptKey = "Loaded"
                coroutine.wrap(function() sendKeyWebhook(savedKey) end)()
                Window:Destroy()
                if currentGameConfig then
                    local startTime = tick()
                    loadstring(game:HttpGet(currentGameConfig.script_url))()
                else
                    Fluent:Notify({Title = "No Script Available", Content = "This game is not supported.", Duration = 6})
                end
            else
                deleteKey()
                Fluent:Notify({Title = "Invalid Key", Content = status.message or "Key validation failed", Duration = 6})
            end
        end
    end
})

Tabs.Main:AddButton({
    Title = "Get Key",
    Callback = function()
        setclipboard("https://ads.luarmor.net/get_key?for=H4xScript__Linkvertise-fefhrreVBkfh")
        Fluent:Notify({Title = "Copied to Clipboard", Content = "Visit the URL to get a key", Duration = 5})
    end
})

Tabs.Main:AddButton({
    Title = "Join Discord",
    Description = "Join our Discord server! For Lootlink and Stocks/Updates ",
    Callback = function()
        setclipboard("https://discord.gg/H4xScripts")
        Fluent:Notify({Title = "Copied to Clipboard", Content = "Join our Discord server!", Duration = 5})
    end
})

for placeId, v in pairs(Scripts) do
    Tabs.Supported:AddButton({
        Title = v.name .. (v.keyless and " (Keyless)" or ""),
        Callback = function()
            if v.universe_id then
                TeleportService:Teleport(v.universe_id)
            else
                TeleportService:Teleport(tonumber(placeId))
            end
        end
    })
end
